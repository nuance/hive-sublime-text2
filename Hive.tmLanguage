<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>hql</string>
		<string>sql</string>
		<string>ql</string>
	</array>
	<key>name</key>
	<string>Hive</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>\b(?i:create|database|schema|if not exists|comment|location|with dbproperties|show|drop|if exists|restrict|cascade|external|table|select|distinct|partitioned by|clustered by|sorted by|asc|desc|into|buckets|skewed by|row format|stored as|stored by|with serdeproperties|tblproperties|as|like|delimited|fields terminated by|collection items terminated by|map keys terminated by|lines terminated by|serde|sequencefile|textfile|rcfile|inputformat|outputformat|from|where|group by|order by|limit|load data|local|inpath|overwrite|partition|insert|directory|all|cluster by|sort by|distribute by|having|using|reduce|transform|join|left|right|full|outer|semi|cross|lateral view|import|export|describe|archive|unarchive|alter|add)\b</string>
			<key>name</key>
			<string>keyword.control.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(--).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.asciidoc</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:string|tinyint|smallint|int|bigint|boolean|float|double|timestamp|binary)\b</string>
			<key>name</key>
			<string>storage.type.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:struct|map|array)\b</string>
			<key>name</key>
			<string>support.type.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i)null\b</string>
			<key>name</key>
			<string>constant.language.hive</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.hive</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.hive</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>end</key>
			<string>'</string>
			<key>name</key>
			<string>string.quoted.single.hive</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.hive</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(\+|\-|\*|\/|\%|&amp;|\|\^|~)\b</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(=|&lt;=&gt;|==|&lt;&gt;|&lt;|&lt;=|&gt;|&gt;=|between|is|like|rlike|regexp)\b</string>
			<key>name</key>
			<string>keyword.operator.relational.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(and|&amp;&amp;|or|not|\|\||!)\b</string>
			<key>name</key>
			<string>keyword.operator.logical.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:round|floor|ceil|ceiling|rand|exp|ln|log|pow|power|sqrt|bin|hex|unhex|conv|abs|pmod|sin|asin|cos|acos|tan|atan|degrees|radians|positive|negative|sign|e|pi)\b</string>
			<key>name</key>
			<string>support.function.udf.mathematic.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:size|map_keys|map_values|array_contains|sort_array)\b</string>
			<key>name</key>
			<string>support.function.udf.collection.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:binary|cast)\b</string>
			<key>name</key>
			<string>support.function.udf.type-cast.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:from_unixtime|unix_timestamp|to_date|year|month|day|dayofmonth|hour|minute|second|weekofyear|datediff|date_add|date_sub|from_utc_timestamp|to_utc_timestamp)\b</string>
			<key>name</key>
			<string>support.function.udf.date.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:if|coalesce)\b</string>
			<key>name</key>
			<string>support.function.udf.conditional.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:ascii|concat|context_ngrams|concat_ws|find_in_set|format_number|get_json_object|in_file|instr|length|locate|lower|lcase|lpad|ltrim|ngrams|parse_url|printf|regexp_extract|regexp_replace|repeat|reverse|rpad|rtrim|sentences|space|split|str_to_map|substr|substring|translate|trim|upper|ucase)\b</string>
			<key>name</key>
			<string>support.function.udf.string.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:java_method|xpath|xpath_short|xpath_int|xpath_long|xpath_float|xpath_double|xpath_number|xpath_string|get_json_object)\b</string>
			<key>name</key>
			<string>support.function.udf.misc.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:count|sum|avg|min|max|variance|var_pop|var_samp|stddev_pop|stddev_samp|covar_pop|covar_samp|corr|percentile|percentile_approx|histogram_numeric|collect_set)\b</string>
			<key>name</key>
			<string>support.function.udaf.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:inline|explode|json_tuple|parse_url_tuple)\b</string>
			<key>name</key>
			<string>support.function.udtf.hive</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.parameter.hive</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.parameter.hive</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)\s*(set)\s+([^\=]+)\s*=\s*(\S+);</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.hive</string>
	<key>uuid</key>
	<string>a4023757-1f16-4e02-b349-d1673b8626b8</string>
</dict>
</plist>
